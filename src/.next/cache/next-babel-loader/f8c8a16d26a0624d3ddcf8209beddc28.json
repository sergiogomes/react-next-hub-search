{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sergiogomes/Documents/Workfolder/react-next-hub-search/src/components/resultSearch/code.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\n/**\n * Returns a 3 leter month based on month code\n * @param {number} month\n * @returns string\n */\n\nvar getLanguageDesc = function getLanguageDesc(file) {\n  var color = \"\";\n  var ext = file.split(\".\")[1].toUpperCase();\n\n  if (ext === \"JS\") {\n    ext = \"JavaScript\";\n    color = \"badge-warning\";\n  }\n\n  if (ext === \"MD\") ext = \"Markdown\";\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"badge badge-pill circle mr-1 \".concat(color ? color : \"badge-secondary\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \" \"), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, ext));\n};\n\nvar Code = function Code(props) {\n  var code = props.code;\n  return __jsx(\"div\", {\n    className: \"list-group-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"small\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/[user]\",\n    as: \"/\".concat(code.repository.owner.login),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: code.repository.owner.avatar_url,\n    className: \"mr-3 rounded-circle sm-img\",\n    alt: code.repository.owner.login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }))), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/[user]/[repo]\",\n    as: code.repository.full_name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"font-weight-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" \".concat(code.repository.full_name))))), __jsx(\"div\", {\n    className: \"ml-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: code.html_url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"font-weight-bold text-break\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, code.path))), __jsx(\"div\", {\n    className: \"ml-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, getLanguageDesc(code.name))));\n};\n\n_c = Code;\nexport default Code;\n\nvar _c;\n\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"sources":["/Users/sergiogomes/Documents/Workfolder/react-next-hub-search/src/components/resultSearch/code.js"],"names":["Link","getLanguageDesc","file","color","ext","split","toUpperCase","Code","props","code","repository","owner","login","avatar_url","full_name","html_url","path","name"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA;;;;;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBC,WAAnB,EAAV;;AAEA,MAAIF,GAAG,KAAK,IAAZ,EAAkB;AAChBA,IAAAA,GAAG,GAAG,YAAN;AACAD,IAAAA,KAAK,GAAG,eAAR;AACD;;AACD,MAAIC,GAAG,KAAK,IAAZ,EAAkBA,GAAG,GAAG,UAAN;AAElB,SACE,4BACE;AACE,IAAA,SAAS,yCACPD,KAAK,GAAGA,KAAH,GAAW,iBADT,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,GAAP,CANF,CADF;AAUD,CApBD;;AAsBA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,MACdC,IADc,GACLD,KADK,CACdC,IADc;AAEtB,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,aAAMA,IAAI,CAACC,UAAL,CAAgBC,KAAhB,CAAsBC,KAA5B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEH,IAAI,CAACC,UAAL,CAAgBC,KAAhB,CAAsBE,UAD7B;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,GAAG,EAAEJ,IAAI,CAACC,UAAL,CAAgBC,KAAhB,CAAsBC,KAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAA4B,IAAA,EAAE,EAAEH,IAAI,CAACC,UAAL,CAAgBI,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqCL,IAAI,CAACC,UAAL,CAAgBI,SAArD,EADF,CADF,CAVF,CADF,EAiBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,IAAI,CAACM,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGN,IAAI,CAACO,IALR,CADF,CADF,CAjBF,EA4BE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bf,eAAe,CAACQ,IAAI,CAACQ,IAAN,CAA9C,CADF,CA5BF,CADF;AAkCD,CApCD;;KAAMV,I;AAsCN,eAAeA,IAAf","sourcesContent":["import Link from \"next/link\";\n\n/**\n * Returns a 3 leter month based on month code\n * @param {number} month\n * @returns string\n */\nconst getLanguageDesc = (file) => {\n  let color = \"\";\n  let ext = file.split(\".\")[1].toUpperCase();\n\n  if (ext === \"JS\") {\n    ext = \"JavaScript\";\n    color = \"badge-warning\";\n  }\n  if (ext === \"MD\") ext = \"Markdown\";\n\n  return (\n    <>\n      <span\n        className={`badge badge-pill circle mr-1 ${\n          color ? color : \"badge-secondary\"\n        }`}\n      >{` `}</span>\n      <span>{ext}</span>\n    </>\n  );\n};\n\nconst Code = (props) => {\n  const { code } = props;\n  return (\n    <div className=\"list-group-item\">\n      <small className=\"text-muted\">\n        <Link href=\"/[user]\" as={`/${code.repository.owner.login}`}>\n          <a>\n            <img\n              src={code.repository.owner.avatar_url}\n              className=\"mr-3 rounded-circle sm-img\"\n              alt={code.repository.owner.login}\n            />\n          </a>\n        </Link>\n        <span>\n          <Link href=\"/[user]/[repo]\" as={code.repository.full_name}>\n            <a className=\"font-weight-bold\">{` ${code.repository.full_name}`}</a>\n          </Link>\n        </span>\n      </small>\n      <div className=\"ml-5\">\n        <Link href={code.html_url}>\n          <a\n            className=\"font-weight-bold text-break\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {code.path}\n          </a>\n        </Link>\n      </div>\n      <div className=\"ml-5\">\n        <small className=\"text-muted\">{getLanguageDesc(code.name)}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default Code;\n"]},"metadata":{},"sourceType":"module"}