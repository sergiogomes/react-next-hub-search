{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sergiogomes/Documents/Workfolder/react-next-hub-search/src/components/resultSearch/resultSearch.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Repository from \"./respository\";\nimport Commit from \"./commit\";\nimport Issue from \"./issue\";\nimport Topic from \"./topic\";\nimport User from \"./user\";\nimport Code from \"./code\";\n\nvar ResultSearch = function ResultSearch(props) {\n  var options = props.options,\n      text = props.text,\n      page = props.page;\n  var data = options[0];\n  var last = Math.floor(data.results / 30) + 1;\n  var pag = parseInt(page);\n  var res_page = pag * 30; // Bootsrap list with badges\n\n  return __jsx(\"div\", {\n    className: \"list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, data.results > 0 && __jsx(\"h4\", {\n    className: \"my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"\".concat(data.results, \" \").concat(data.single, \" \").concat(data.results > 1 ? \"results\" : \"result\")), data.results > 30 && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Displaying from \".concat(pag === 1 ? 1 : res_page - 30, \" to \").concat(res_page > 1000 ? 1000 : res_page, \" \")), data.results === 1000 && __jsx(\"small\", {\n    className: \"alert alert-warning mt-2\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Results are limited to 1000.\"), __jsx(\"div\", {\n    className: \"list-group list-group-flush\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, data.items && data.items.map(function (item) {\n    if (data.id === 1) return __jsx(Repository, {\n      key: item.id,\n      repo: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 39\n      }\n    });\n    if (data.id === 2) return __jsx(Code, {\n      key: item.sha,\n      code: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 39\n      }\n    });\n    if (data.id === 3) return __jsx(Commit, {\n      key: item.sha,\n      commit: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 39\n      }\n    });\n    if (data.id === 4) return __jsx(Issue, {\n      key: item.id,\n      issue: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 39\n      }\n    });\n    if (data.id === 8) return __jsx(Topic, {\n      key: item.created_at,\n      topic: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }\n    });\n    if (data.id === 10) return __jsx(User, {\n      key: item.id,\n      user: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 40\n      }\n    });\n  })), data.results === 0 && __jsx(React.Fragment, null, __jsx(\"h4\", {\n    className: \"my-4 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"We couldn\\u2019t find any \".concat(data.single, \" in the GitHub Searching API matching '\").concat(text, \"'.\")), __jsx(\"small\", {\n    className: \"alert alert-warning mt-2 text-center\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Discussions\"), \", \", __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 43\n    }\n  }, \"Packages\"), \",\", \" \", __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Marketplace\"), \", and \", __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }\n  }, \"Wikis\"), \" don't have API endpoint yet.\")));\n};\n\n_c = ResultSearch;\nexport default ResultSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultSearch\");","map":{"version":3,"sources":["/Users/sergiogomes/Documents/Workfolder/react-next-hub-search/src/components/resultSearch/resultSearch.js"],"names":["Repository","Commit","Issue","Topic","User","Code","ResultSearch","props","options","text","page","data","last","Math","floor","results","pag","parseInt","res_page","single","items","map","item","id","sha","created_at"],"mappings":"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","sourcesContent":["import Repository from \"./respository\";\nimport Commit from \"./commit\";\nimport Issue from \"./issue\";\nimport Topic from \"./topic\";\nimport User from \"./user\";\nimport Code from \"./code\";\n\nconst ResultSearch = (props) => {\n  const { options, text, page } = props;\n  const data = options[0];\n  const last = Math.floor(data.results / 30) + 1;\n  const pag = parseInt(page);\n  const res_page = pag * 30;\n\n  // Bootsrap list with badges\n  return (\n    <div className=\"list-group\">\n      {data.results > 0 && (\n        <h4 className=\"my-4\">\n          {`${data.results} ${data.single} ${\n            data.results > 1 ? \"results\" : \"result\"\n          }`}\n        </h4>\n      )}\n      {data.results > 30 && (\n        <div>{`Displaying from ${pag === 1 ? 1 : res_page - 30} to ${\n          res_page > 1000 ? 1000 : res_page\n        } `}</div>\n      )}\n      {data.results === 1000 && (\n        <small className=\"alert alert-warning mt-2\" role=\"alert\">\n          Results are limited to 1000.\n        </small>\n      )}\n      <div className=\"list-group list-group-flush\">\n        {data.items &&\n          data.items.map((item) => {\n            if (data.id === 1) return <Repository key={item.id} repo={item} />;\n            if (data.id === 2) return <Code key={item.sha} code={item} />;\n            if (data.id === 3) return <Commit key={item.sha} commit={item} />;\n            if (data.id === 4) return <Issue key={item.id} issue={item} />;\n            if (data.id === 8)\n              return <Topic key={item.created_at} topic={item} />;\n            if (data.id === 10) return <User key={item.id} user={item} />;\n          })}\n      </div>\n      {data.results === 0 && (\n        <>\n          <h4 className=\"my-4 text-center\">\n            {`We couldnâ€™t find any ${data.single} in the GitHub Searching API matching '${text}'.`}\n          </h4>\n          <small className=\"alert alert-warning mt-2 text-center\" role=\"alert\">\n            <strong>Discussions</strong>, <strong>Packages</strong>,{\" \"}\n            <strong>Marketplace</strong>, and <strong>Wikis</strong> don't have\n            API endpoint yet.\n          </small>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ResultSearch;\n"]},"metadata":{},"sourceType":"module"}